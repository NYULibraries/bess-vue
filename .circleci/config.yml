aws-export: &aws-export
  run:
    name: Export AWS env vars
    command: |
      echo 'export AWS_ACCESS_KEY_ID=${WEB_CDN_AWS_ACCESS_KEY_ID}' >> $BASH_ENV
      echo 'export AWS_SECRET_ACCESS_KEY=${WEB_CDN_AWS_SECRET_ACCESS_KEY}' >> $BASH_ENV
      echo 'export AWS_REGION=us-east-1' >> $BASH_ENV
      echo 'export S3_URI=${S3_URI}' >> $BASH_ENV

copy_files: &copy_files
  run:
    name: Copies distribution and examples
    command: |
      docker cp $(docker ps -a -q --filter name=webpack):/app/dist/ .
      docker cp $(docker ps -a -q --filter name=webpack):/app/example-htmls/. ./dist

docker-defaults: &docker-defaults
  docker:
    - image: cimg/base:2023.07
  working_directory: ~/app

# Note that `aws s3 sync ... --exact-timestamps` only works for downloads from S3,
# not uploads: https://github.com/aws/aws-cli/issues/4460.  The only safe way
# to update is to upload absolutely everything using `cp` and then deleting
# removed files using `sync --delete`.  There are many other open GitHub issues
# related to this behavior.  Here's another: https://github.com/aws/aws-cli/issues/3273.
aws-sync-s3: &aws-sync-s3
  run:
    name: Deploy to S3
    command: |
      aws s3 cp --recursive dist ${S3_URI}/bess-vue && \
      aws s3 sync --delete dist ${S3_URI}/bess-vue

test: &test
  run:
    name: Test
    command: |
      docker-compose run test

version: 2.1
orbs:
  aws-cli: circleci/aws-cli@4.1.1
jobs:
  deploy-dev:
    <<: *docker-defaults
    steps:
      - checkout
      - setup_remote_docker
      - *test
      - run:
          name: Webpack
          command: |
            NODE_ENV=staging docker-compose run webpack
      - *copy_files
      - *aws-export
      - aws-cli/setup
      - *aws-sync-s3
      - store_artifacts:
          path: dist

  deploy-prod:
    <<: *docker-defaults
    steps:
      - checkout
      - setup_remote_docker
      - *test
      - run:
          name: Webpack
          command: |
            NODE_ENV=production docker-compose run webpack
      - *copy_files
      - *aws-export
      - aws-cli/setup
      - *aws-sync-s3
      - store_artifacts:
          path: dist

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - deploy-dev:
          context: web-cdn-aws-nyulitsdev
          filters:
            branches:
              ignore:
                - master
      - deploy-prod:
          context: web-cdn-aws-nyulits
          filters:
            branches:
              only: master
