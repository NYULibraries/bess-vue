dev: &dev 'dev'
prod: &prod 'prod'

environment-parameter: &environment-parameter
  environment:
    type: enum
    enum: [ *dev, *prod ]

aws-export: &aws-export
  run:
    name: Export AWS env vars
    command: |
      echo 'export AWS_ACCESS_KEY_ID=${WEB_CDN_AWS_ACCESS_KEY_ID}' >> $BASH_ENV
      echo 'export AWS_SECRET_ACCESS_KEY=${WEB_CDN_AWS_SECRET_ACCESS_KEY}' >> $BASH_ENV
      echo 'export CLOUDFRONT_DISTRIBUTION_ID=${CLOUDFRONT_DISTRIBUTION_ID}' >> $BASH_ENV
      echo 'export S3_URI=${S3_URI}' >> $BASH_ENV

copy_files: &copy_files
  run:
    name: Copies distribution
    command: |
      docker cp $(docker ps -a -q --filter name=build):/app/dist/ .

machine-defaults: &machine-defaults
  machine:
    image: ubuntu-2204:current
  working_directory: ~/app

aws-cloudfront-create-invalidation: &aws-cloudfront-create-invalidation
  run:
    name: Invalidate CloudFront path
    command: |
      aws cloudfront create-invalidation \
        --distribution-id ${CLOUDFRONT_DISTRIBUTION_ID} \
        --paths '/bess-vue*'

# Note that `aws s3 sync ... --exact-timestamps` only works for downloads from S3,
# not uploads: https://github.com/aws/aws-cli/issues/4460.  The only safe way
# to update is to upload absolutely everything using `cp` and then deleting
# removed files using `sync --delete`.  There are many other open GitHub issues
# related to this behavior.  Here's another: https://github.com/aws/aws-cli/issues/3273.
aws-sync-s3: &aws-sync-s3
  run:
    name: Deploy to S3
    command: |
      aws s3 cp --recursive dist ${S3_URI}/bess-vue && \
      aws s3 sync --delete dist ${S3_URI}/bess-vue

test: &test
  run:
    name: Test
    command: |
      docker compose run test

commands:
  deploy-application:
    description: Test application code, build, deploy to S3, invalidate CloudFront path
    parameters:
      <<: *environment-parameter
    steps:
      - checkout
      - *test
      - run:
          name: build-<< parameters.environment >>
          command: |
            docker compose run build-<< parameters.environment >>
      - *copy_files
      - *aws-export
      - aws-cli/setup
      - *aws-sync-s3
      - *aws-cloudfront-create-invalidation
      -   store_artifacts:
            path: dist

version: 2.1
orbs:
  aws-cli: circleci/aws-cli@4.1.1
jobs:
  deploy-dev:
    <<: *machine-defaults
    steps:
      - deploy-application:
            environment: *dev

  deploy-prod:
    <<: *machine-defaults
    steps:
      - deploy-application:
          environment: *prod

workflows:
  version: 2
  build-and-deploy:
    jobs:
#      - deploy-dev:
#          context: web-cdn-aws-nyulitsdev
#          filters:
#            branches:
#              ignore:
#                - master
      - deploy-prod:
          context: web-cdn-aws-nyulits
          filters:
            branches:
              only: master
